# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'interfacecamera_14_01.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets, QtOpenGL
# from PyQt5Widgets import
from andorEmccd import AndorEmccd
#include <QtOpenGL>


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(749, 612)
        MainWindow.setStyleSheet("")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label_settings = QtWidgets.QLabel(self.centralwidget)
        self.label_settings.setGeometry(QtCore.QRect(390, 50, 151, 21))
        self.label_settings.setObjectName("label_settings")
        self.label_exposuretime = QtWidgets.QLabel(self.centralwidget)
        self.label_exposuretime.setGeometry(QtCore.QRect(400, 248, 131, 20))
        self.label_exposuretime.setObjectName("label_exposuretime")
        self.a = QtWidgets.QLabel(self.centralwidget)
        self.a.setGeometry(QtCore.QRect(410, 140, 121, 16))
        self.a.setText("")
        self.a.setObjectName("a")
        self.lineEdit_Exposuretime = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_Exposuretime.setGeometry(QtCore.QRect(510, 250, 81, 16))
        self.lineEdit_Exposuretime.setObjectName("lineEdit_Exposuretime")
        self.pushButton_start = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_start.setGeometry(QtCore.QRect(40, 470, 121, 31))
        self.pushButton_start.setObjectName("pushButton_start")
        self.label_shutter = QtWidgets.QLabel(self.centralwidget)
        self.label_shutter.setGeometry(QtCore.QRect(400, 160, 101, 16))
        self.label_shutter.setObjectName("label_shutter")
        self.comboBox_shutter = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox_shutter.setGeometry(QtCore.QRect(510, 150, 81, 21))
        self.comboBox_shutter.setObjectName("comboBox_shutter")
        self.comboBox_shutter.addItem("")
        self.comboBox_shutter.addItem("")
        self.label_trigger = QtWidgets.QLabel(self.centralwidget)
        self.label_trigger.setGeometry(QtCore.QRect(400, 100, 81, 16))
        self.label_trigger.setObjectName("label_trigger")
        self.comboBox_trigger = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox_trigger.setGeometry(QtCore.QRect(510, 100, 81, 21))
        self.comboBox_trigger.setObjectName("comboBox_trigger")
        self.comboBox_trigger.addItem("")
        self.comboBox_trigger.addItem("")
        self.label_gain = QtWidgets.QLabel(self.centralwidget)
        self.label_gain.setGeometry(QtCore.QRect(400, 220, 55, 16))
        self.label_gain.setObjectName("label_gain")
        self.lineEdit_gain = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_gain.setGeometry(QtCore.QRect(510, 220, 81, 16))
        self.lineEdit_gain.setObjectName("lineEdit_gain")
        self.label_temperature = QtWidgets.QLabel(self.centralwidget)
        self.label_temperature.setGeometry(QtCore.QRect(400, 130, 81, 16))
        self.label_temperature.setObjectName("label_temperature")
        self.lineEdit_temperature = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_temperature.setGeometry(QtCore.QRect(510, 130, 81, 16))
        self.lineEdit_temperature.setObjectName("lineEdit_temperature")
        self.pushButton_close = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_close.setGeometry(QtCore.QRect(200, 470, 121, 31))
        self.pushButton_close.setObjectName("pushButton_close")
        self.label_preamp = QtWidgets.QLabel(self.centralwidget)
        self.label_preamp.setGeometry(QtCore.QRect(400, 190, 73, 16))
        self.label_preamp.setObjectName("label_preamp")
        self.lineEdit_preamp = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_preamp.setGeometry(QtCore.QRect(510, 190, 81, 16))
        self.lineEdit_preamp.setObjectName("lineEdit_preamp")
        self.openGLWidget_image = QtWidgets.QOpenGLWidget(self.centralwidget)
        self.openGLWidget_image.setGeometry(QtCore.QRect(30, 90, 291, 351))
        self.openGLWidget_image.setObjectName("openGLWidget_image")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.menuBar = QtWidgets.QMenuBar(MainWindow)
        self.menuBar.setGeometry(QtCore.QRect(0, 0, 749, 26))
        self.menuBar.setObjectName("menuBar")
        MainWindow.setMenuBar(self.menuBar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        ####Put here the
        self.pushButton_start.clicked.connect(self.clicked_me)
        self.pushButton_close.clicked.connect(self.clicked_me)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label_settings.setToolTip(_translate("MainWindow",
                                                  "<html><head/><body><p align=\"center\"><span style=\" font-size:12pt; font-weight:600;\">Camera Settings</span></p></body></html>"))
        self.label_settings.setText(_translate("MainWindow",
                                               "<html><head/><body><p align=\"center\"><span style=\" font-size:11pt; color:#000000;\">Camera Settings</span></p></body></html>"))
        self.label_exposuretime.setText(_translate("MainWindow",
                                                   "<html><head/><body><p align=\"justify\"><span style=\" font-size:7pt;\">Exposure Time(s)</span></p></body></html>"))
        self.pushButton_start.setText(_translate("MainWindow", "Start Acquisition"))
        self.label_shutter.setText(_translate("MainWindow", "<html><head/><body><p>Shutter</p></body></html>"))
        self.comboBox_shutter.setItemText(0, _translate("MainWindow", "Open"))
        self.comboBox_shutter.setItemText(1, _translate("MainWindow", "Close"))
        self.label_trigger.setText(_translate("MainWindow", "Trigger Mode"))
        self.comboBox_trigger.setItemText(0, _translate("MainWindow", "Internal"))
        self.comboBox_trigger.setItemText(1, _translate("MainWindow", "External"))
        self.label_gain.setText(_translate("MainWindow", "Em-Gain"))
        self.label_temperature.setText(_translate("MainWindow", "Temperature"))
        self.pushButton_close.setText(_translate("MainWindow", "Close the Camera"))
        self.label_preamp.setText(_translate("MainWindow", "Preamp-gain"))

        # Button Connections
        # this part will serve to connect all the user input to the built-in functions in this code

    def start_camera(self):
        close_camera = self.pushButton_close.clicked
        trigger = self.comboBox_trigger.currentText()
        temperature = float(self.lineEdit_temperature.text())
        shutter = self.comboBox_shutter.textActivated
        pre_amp = float(self.lineEdit_preamp.text())
        em_gain = float(self.lineEdit_gain.text())
        exposure_time = float(self.lineEdit_Exposuretime.text())

        print(temperature, pre_amp, em_gain, exposure_time)

        AndorEmccd().start_acquisition(single=True)
        AndorEmccd().set_preamp_gain(pre_amp)
        AndorEmccd().set_temperature(temperature)
        AndorEmccd().set_em_gain(em_gain)
        AndorEmccd().set_exposure_time(exposure_time)
        AndorEmccd().set_shutter_open(shutter)
        AndorEmccd().set_trigger_mode(trigger)
        AndorEmccd().close(close_camera)

    def clicked_me(self):
        print("I have been clicked")

    # def message(self):



# class OpenGlWidget(QtOpenGLWidget) :
#      def __init__(self,parent=None):


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
